import PushNotification from 'react-native-push-notification';
import i18n from 'react-native-i18n';
import colors from '../themes/Colors';

import {
  NEW_ITEM,
  NEW_CATEGORY,
  EDIT_SALARY,
  NEW_INCOME,
  NEW_EXPENSE,
  EDIT_EXPENSE,
  DELETE_EXPENSE,
  EDIT_INCOME,
  DELETE_INCOME,
  EDIT_CATEGORY,
  DELETE_CATEGORY,
  EDIT_ITEM,
  DELETE_ITEM,
  NEW_THRESHOLD,
} from '../constants/ActionTypes';

const pushNotification = store => next => async action => {
  const result = next(action);
  let shouldShowMessage = true;
  const options = {
    title: 'Your alert title goes here',
    message: 'New activity'
  };

  switch (action.type) {
    case NEW_ITEM:
      options.title = 'New item added';
      break;
    case NEW_CATEGORY:
      options.title = 'New category added';
      break;
    case EDIT_SALARY:
      options.title = 'Salary updated';
      break;
    case NEW_INCOME:
      options.title = 'New income added';
      break;
    case NEW_EXPENSE:
      options.title = 'New expense added';
      break;
    case NEW_THRESHOLD:
      options.title = 'New threshold added';
      break;
    case EDIT_INCOME:
      options.title = 'Income updated';
      break;
    case EDIT_EXPENSE:
      options.title = 'Expense updated';
      break;
    case EDIT_CATEGORY:
      options.title = 'Category updated';
      break;
    case EDIT_ITEM:
      options.title = 'Item updated';
      break;
    case DELETE_INCOME:
      options.title = 'Income deleted';
      break;
    case DELETE_EXPENSE:
      options.title = 'Expense deleted';
      break;
    case DELETE_CATEGORY:
      options.title = 'Category deleted';
      break;
    case DELETE_ITEM:
      options.title = 'Item deleted';
      break;

    default:
      shouldShowMessage = false;
  }

  if (shouldShowMessage) {
    PushNotification.localNotification({
      // TODO: implement logic for unique ids
      id: 1, //(optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
      ticker: 'My Notification Ticker', // (optional)
      autoCancel: true, // (optional) default: true
      largeIcon: 'ic_launcher', // (optional) default: "ic_launcher"
      smallIcon: 'ic_notification', // (optional) default: "ic_notification" with fallback for "ic_launcher"
      bigText: options.title,
      //subText: 'This is a subText',
      color: colors.main, // (optional) default: system default
      vibrate: true, // (optional) default: true
      vibration: 400, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
      tag: 'some_tag', // (optional) add tag to message
      ongoing: false, // (optional) set whether this is an "ongoing" notification

      /* iOS and Android properties */
      title: options.title,
      message: options.message,
      playSound: true,
      soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
      //number: '10', // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)
      // repeatType: 'day', // (Android only) Repeating interval. Could be one of `week`, `day`, `hour`, `minute, `time`. If specified as time, it should be accompanied by one more parameter 'repeatTime` which should the number of milliseconds between each interval
    });
  }

  return result;
};


export default pushNotification;
